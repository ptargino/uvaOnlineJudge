//#include <stdlib.h>
//
//const int MAX = 8;
//long long count;
//
//void backtrack(bool a[8][8], int n, int k, int pos) {
//	if (k == 0) {
//		count++;
//	}
//	int i, j, x, y;
//	for (i = pos; i <= n * n - k; i++) {
//		x = i / n, y = i % n;
//		bool canPut = true;
//		for (j = 0; j < pos; j++) {
//			if ((abs(x - (j / n)) == abs(y - (j % n))) && (a[j / n][j % n])) {
//				canPut = false;
//				break;
//			}
//		}
//		if (canPut) {
//			a[x][y] = true;
//			backtrack(a, n, k - 1, i + 1);
//		}
//		a[x][y] = false;
//	}
//}
//
//void generateSolution(int n, int k) {
//	bool a[MAX][MAX];
//	count = 0;
//	int i, j;
//	for (i = 0; i < n; i++)
//		for (j = 0; j < n; j++)
//			a[i][j] = false;
//	backtrack(a, n, k, 0);
//	printf("%lld", count);
//}


#include <stdio.h>

int main() {
	long
			sol[9][65] = { { }, { 1, 1 }, { 1, 4, 4, 0, 0 }, { 1, 9, 26, 26, 8,
					0, 0, 0, 0, 0 }, { 1, 16, 92, 232, 260, 112, 16, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0 }, { 1, 25, 240, 1124, 2728, 3368,
					1960, 440, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
					0, 0 }, { 1, 36, 520, 3896, 16428, 39680, 53744, 38368,
					12944, 1600, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 }, { 1, 49, 994, 10894,
					70792, 282248, 692320, 1022320, 867328, 389312, 81184,
					5792, 128, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
					0 }, { 1, 64, 1736, 26192, 242856, 1444928, 5599888,
					14082528, 22522960, 22057472, 12448832, 3672448, 489536,
					20224, 256, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
					0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } };
	int n, k;
	while (scanf("%d%d", &n, &k) == 2 && n) {
		printf("%ld\n", sol[n][k]);
	}
}
